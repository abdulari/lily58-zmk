/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        base {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3        &kp N4        &kp N5                                                   &kp N6     &kp N7     &kp N8     &kp N9   &kp N0         &kp BACKSPACE
&kp TAB         &kp Q   &kp W   &kp E         &kp R         &kp T                                                    &kp Y      &kp U      &kp I      &kp O    &kp P          &kp BACKSLASH
&kp LEFT_SHIFT  &kp A   &kp S   &kp D         &kp F         &kp G                                                    &kp H      &kp J      &kp K      &kp L    &kp SEMICOLON  &kp SINGLE_QUOTE
&kp LCTRL       &kp Z   &kp X   &kp C         &kp V         &kp B         &lt 2 LEFT_BRACKET    &lt 2 RIGHT_BRACKET  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH       &kp DELETE
                                &kp CAPSLOCK  &kp LEFT_ALT  &kp LEFT_WIN  &lt 1 SPACE           &lt 1 ENTER          &kp MINUS  &kp EQUAL  &kt GRAVE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        symbols {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &none           &none           &none            &none     &kp BACKSPACE                  &none  &none           &none           &none            &none     &kp BACKSPACE
&none   &none           &kp UP_ARROW    &none            &kp HOME  &kp PAGE_UP                    &none  &none           &kp UP_ARROW    &none            &kp HOME  &kp PAGE_UP
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END   &kp PAGE_DOWN                  &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END   &kp PAGE_DOWN
&trans  &none           &none           &none            &none     &kp DELETE     &none    &none  &none  &none           &none           &none            &none     &kp DELETE
                                        &trans           &trans    &trans         &none    &none  &none  &none           &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&kp F11  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F12
&trans   &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans   &trans
                         &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
